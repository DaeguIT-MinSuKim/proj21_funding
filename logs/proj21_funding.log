[DEBUG] [2021-06-13 14:19] test01SelectAdminbyNo()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:19] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: admin1(String)
[TRACE] [2021-06-13 14:19] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:19] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-13 14:19] test03InsertAdmin()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-13 14:19] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-13 14:19] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:19] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-13 14:19] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-13 14:19] <==    Updates: 0
[DEBUG] [2021-06-13 14:19] test07SelectAdminAll()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:19] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-13 14:19] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-13 14:19] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-13 14:19] <==      Total: 3
[DEBUG] [2021-06-13 14:19] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-13 14:19] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-13 14:19] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-13 14:19] test01SelectBCbyNo()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-13 14:19] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-13 14:19] test02InsertBC()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-13 14:19] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-13 14:19] <==      Total: 0
[DEBUG] [2021-06-13 14:19] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] test06SelectBCAll()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-13 14:19] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-13 14:19] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-13 14:19] <==      Total: 2
[DEBUG] [2021-06-13 14:19] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-13 14:19] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-13 14:19] test01InsertQNA()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] test03SelectQNAByUserId()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-13 14:19] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-13 12:00:16.0, 넹, 2021-06-13 12:00:16.0, null
[TRACE] [2021-06-13 14:19] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:19:56.0, 잘 모르겠음, 2021-06-13 14:19:56.0, null
[DEBUG] [2021-06-13 14:19] <==      Total: 2
[DEBUG] [2021-06-13 14:19] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=넹, replyDate=Sun Jun 13 12:00:16 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:19:56 KST 2021, qnaReply=잘 모르겠음, replyDate=Sun Jun 13 14:19:56 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-13 14:19] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-13 14:19] <==    Updates: 0
[DEBUG] [2021-06-13 14:19] test05SelectQNAByBC()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 2(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-13 14:19] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:16.0, null, null, null
[TRACE] [2021-06-13 14:19] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:19:56.0, 잘 모르겠음, 2021-06-13 14:19:56.0, null
[DEBUG] [2021-06-13 14:19] <==      Total: 2
[DEBUG] [2021-06-13 14:19] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:19:56 KST 2021, qnaReply=잘 모르겠음, replyDate=Sun Jun 13 14:19:56 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-13 14:19] test06SelectQNAAll()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-13 14:19] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-13 12:00:16.0, 넹, 2021-06-13 12:00:16.0, null
[TRACE] [2021-06-13 14:19] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:16.0, null, null, null
[TRACE] [2021-06-13 14:19] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:19:56.0, 잘 모르겠음, 2021-06-13 14:19:56.0, null
[DEBUG] [2021-06-13 14:19] <==      Total: 3
[DEBUG] [2021-06-13 14:19] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=넹, replyDate=Sun Jun 13 12:00:16 KST 2021, qnaFile=null]
[DEBUG] [2021-06-13 14:19] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-13 14:19] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:19:56 KST 2021, qnaReply=잘 모르겠음, replyDate=Sun Jun 13 14:19:56 KST 2021, qnaFile=null]
[DEBUG] [2021-06-13 14:19] testDataSource()
[DEBUG] [2021-06-13 14:19] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-13 14:19] LoginTimeout 30
[DEBUG] [2021-06-13 14:19] testSqlSession()
[DEBUG] [2021-06-13 14:19] session org.apache.ibatis.session.defaults.DefaultSqlSession@3c2b9b59
[DEBUG] [2021-06-13 14:19] test01SelectBoardByNo()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:19] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-13 12:00:15.0, 1
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 2(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:19] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:15.0, 0
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-13 14:19] test03InsertBoard()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-13 14:19] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:19] <==        Row: 3, 1, 공지사항, <<BLOB>>, 2021-06-13 14:19:56.0, 0
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] Board [boardNo=3, categoryNo=null, boardTitle=공지사항, boardContent=06월 02일 UI 변경 안내, boardDate=Sun Jun 13 14:19:56 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-13 14:19] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] res id >> 1
[DEBUG] [2021-06-13 14:19] test07SelectBoardAll()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:19] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-13 12:00:15.0, 1
[TRACE] [2021-06-13 14:19] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:15.0, 0
[DEBUG] [2021-06-13 14:19] <==      Total: 2
[DEBUG] [2021-06-13 14:19] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-13 14:19] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-13 14:19] testSelectCountByPrjNo()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: cnt
[TRACE] [2021-06-13 14:19] <==        Row: 4
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-13 14:19] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-13 14:19] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 1, 0
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] testInsertPrjOption()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-13 14:19] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] testSelectProjectJoinAll()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-13 14:19] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-13 14:19] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-13 14:19] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-13 14:19] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-13 14:19] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[DEBUG] [2021-06-13 14:19] <==      Total: 5
[DEBUG] [2021-06-13 14:19] testSelectProjectListAll()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-13 14:19] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 1, test1, 김상건
[TRACE] [2021-06-13 14:19] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-13 12:00:17.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-13 14:19] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-13 12:00:17.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-13 14:19] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-13 12:00:17.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-13 14:19] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-13 12:00:17.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[DEBUG] [2021-06-13 14:19] <==      Total: 5
[DEBUG] [2021-06-13 14:19] testSelectProjjectListByNo()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-13 14:19] ==> Parameters: 3(Integer)
[TRACE] [2021-06-13 14:19] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-13 14:19] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-13 12:00:17.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] testselectProjectSuccessImbak()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-13 14:19] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-13 14:19] ==> Parameters: test1(String)
[TRACE] [2021-06-13 14:19] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-13 14:19] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-13 14:19] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-13 14:19] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-13 14:19] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-13 14:19] ==> Parameters: 
[TRACE] [2021-06-13 14:19] <==    Columns: last_insert_id()
[TRACE] [2021-06-13 14:19] <==        Row: 6
[DEBUG] [2021-06-13 14:19] <==      Total: 1
[DEBUG] [2021-06-13 14:19] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-13 14:19] ==> Parameters: 6(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-13 14:19] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] test01SelectAdminbyNo()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:26] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: admin1(String)
[TRACE] [2021-06-13 14:26] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:26] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-13 14:26] test03InsertAdmin()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-13 14:26] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] res id >> 1
[DEBUG] [2021-06-13 14:26] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-13 14:26] <==    Updates: 2
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-13 14:26] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:26] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-13 14:26] <==        Row: 4, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-13 14:26] <==      Total: 2
[DEBUG] [2021-06-13 14:26] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] res id >> 1
[DEBUG] [2021-06-13 14:26] test07SelectAdminAll()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-13 14:26] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-13 14:26] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-13 14:26] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-13 14:26] <==      Total: 3
[DEBUG] [2021-06-13 14:26] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-13 14:26] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-13 14:26] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-13 14:26] test01SelectBCbyNo()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-13 14:26] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-13 14:26] test02InsertBC()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-13 14:26] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] res id >> 1
[DEBUG] [2021-06-13 14:26] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-13 14:26] <==      Total: 0
[DEBUG] [2021-06-13 14:26] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] res id >> 1
[DEBUG] [2021-06-13 14:26] test06SelectBCAll()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-13 14:26] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-13 14:26] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-13 14:26] <==      Total: 2
[DEBUG] [2021-06-13 14:26] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-13 14:26] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-13 14:26] test01InsertQNA()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] res id >> 1
[DEBUG] [2021-06-13 14:26] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] res id >> 1
[DEBUG] [2021-06-13 14:26] test03SelectQNAByUserId()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-13 14:26] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-13 12:00:16.0, 넹, 2021-06-13 12:00:16.0, null
[TRACE] [2021-06-13 14:26] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:19:56.0, 잘 모르겠음, 2021-06-13 14:26:25.0, null
[TRACE] [2021-06-13 14:26] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:26:25.0, null, null, null
[DEBUG] [2021-06-13 14:26] <==      Total: 3
[DEBUG] [2021-06-13 14:26] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=넹, replyDate=Sun Jun 13 12:00:16 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:19:56 KST 2021, qnaReply=잘 모르겠음, replyDate=Sun Jun 13 14:26:25 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:26:25 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-13 14:26] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-13 14:26] <==    Updates: 0
[DEBUG] [2021-06-13 14:26] test05SelectQNAByBC()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 2(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-13 14:26] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:16.0, null, null, null
[TRACE] [2021-06-13 14:26] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:19:56.0, 잘 모르겠음, 2021-06-13 14:26:25.0, null
[TRACE] [2021-06-13 14:26] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:26:25.0, null, null, null
[DEBUG] [2021-06-13 14:26] <==      Total: 3
[DEBUG] [2021-06-13 14:26] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:19:56 KST 2021, qnaReply=잘 모르겠음, replyDate=Sun Jun 13 14:26:25 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:26:25 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-13 14:26] test06SelectQNAAll()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-13 14:26] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-13 12:00:16.0, 넹, 2021-06-13 12:00:16.0, null
[TRACE] [2021-06-13 14:26] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:16.0, null, null, null
[TRACE] [2021-06-13 14:26] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:19:56.0, 잘 모르겠음, 2021-06-13 14:26:25.0, null
[TRACE] [2021-06-13 14:26] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-13 14:26:25.0, null, null, null
[DEBUG] [2021-06-13 14:26] <==      Total: 4
[DEBUG] [2021-06-13 14:26] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=넹, replyDate=Sun Jun 13 12:00:16 KST 2021, qnaFile=null]
[DEBUG] [2021-06-13 14:26] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sun Jun 13 12:00:16 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-13 14:26] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:19:56 KST 2021, qnaReply=잘 모르겠음, replyDate=Sun Jun 13 14:26:25 KST 2021, qnaFile=null]
[DEBUG] [2021-06-13 14:26] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sun Jun 13 14:26:25 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-13 14:26] testDataSource()
[DEBUG] [2021-06-13 14:26] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-13 14:26] LoginTimeout 30
[DEBUG] [2021-06-13 14:26] testSqlSession()
[DEBUG] [2021-06-13 14:26] session org.apache.ibatis.session.defaults.DefaultSqlSession@6e694e60
[DEBUG] [2021-06-13 14:26] test01SelectBoardByNo()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:26] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-13 12:00:15.0, 1
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 2(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:26] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:15.0, 0
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-13 14:26] test03InsertBoard()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] res id >> 1
[DEBUG] [2021-06-13 14:26] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-13 14:26] <==    Updates: 0
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-13 14:26] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:26] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-13 14:26:25.0, 0
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] Board [boardNo=4, categoryNo=null, boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sun Jun 13 14:26:25 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-13 14:26] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-13 14:26] <==    Updates: 0
[DEBUG] [2021-06-13 14:26] test07SelectBoardAll()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-13 14:26] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-13 12:00:15.0, 1
[TRACE] [2021-06-13 14:26] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-13 12:00:15.0, 0
[TRACE] [2021-06-13 14:26] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-13 14:26:25.0, 0
[DEBUG] [2021-06-13 14:26] <==      Total: 3
[DEBUG] [2021-06-13 14:26] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-13 14:26] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sun Jun 13 12:00:15 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-13 14:26] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sun Jun 13 14:26:25 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-13 14:26] testSelectCountByPrjNo()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: cnt
[TRACE] [2021-06-13 14:26] <==        Row: 4
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-13 14:26] ==> Parameters: 1(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-13 14:26] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 1, 0
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] testInsertPrjOption()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-13 14:26] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] testSelectProjectJoinAll()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-13 14:26] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-13 14:26] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-13 14:26] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-13 14:26] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-13 14:26] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-13 14:26] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-13 14:26] <==      Total: 6
[DEBUG] [2021-06-13 14:26] testSelectProjectListAll()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-13 14:26] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 1, test1, 김상건
[TRACE] [2021-06-13 14:26] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-13 12:00:17.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-13 14:26] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-13 12:00:17.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-13 14:26] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-13 12:00:17.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-13 14:26] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-13 12:00:17.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-13 14:26] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-13 14:19:56.0, 2021-06-13 14:19:56.0, 2021-06-13 14:19:56.0, 0, test2, 김경연
[DEBUG] [2021-06-13 14:26] <==      Total: 6
[DEBUG] [2021-06-13 14:26] testSelectProjjectListByNo()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-13 14:26] ==> Parameters: 3(Integer)
[TRACE] [2021-06-13 14:26] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-13 14:26] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-13 12:00:17.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] testselectProjectSuccessImbak()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-13 14:26] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, 2021-06-13 12:00:17.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-13 14:26] ==> Parameters: test1(String)
[TRACE] [2021-06-13 14:26] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-13 14:26] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-13 14:26] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-13 14:26] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-13 14:26] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
[DEBUG] [2021-06-13 14:26] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-13 14:26] ==> Parameters: 
[TRACE] [2021-06-13 14:26] <==    Columns: last_insert_id()
[TRACE] [2021-06-13 14:26] <==        Row: 7
[DEBUG] [2021-06-13 14:26] <==      Total: 1
[DEBUG] [2021-06-13 14:26] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-13 14:26] ==> Parameters: 7(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-13 14:26] <==    Updates: 1
