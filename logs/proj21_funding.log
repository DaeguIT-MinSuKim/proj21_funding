[DEBUG] [2021-06-12 15:03] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:03] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 15:03] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:03] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:03] test03InsertAdmin()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:03] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 15:03] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:03] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:03] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 15:03] <==    Updates: 0
[DEBUG] [2021-06-12 15:03] test07SelectAdminAll()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:03] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 15:03] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 15:03] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:03] <==      Total: 3
[DEBUG] [2021-06-12 15:03] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:03] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:03] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:03] test01SelectBCbyNo()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:03] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:03] test02InsertBC()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:03] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 15:03] <==      Total: 0
[DEBUG] [2021-06-12 15:03] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] test06SelectBCAll()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:03] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 15:03] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 15:03] <==      Total: 2
[DEBUG] [2021-06-12 15:03] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:03] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 15:03] test01SelectBoardByNo()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:03] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:03] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:03] test03InsertBoard()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 15:03] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:03] <==        Row: 3, 1, 공지사항, <<BLOB>>, 2021-06-12 15:03:40.0, 0
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] Board [boardNo=3, categoryNo=null, boardTitle=공지사항, boardContent=06월 02일 UI 변경 안내, boardDate=Sat Jun 12 15:03:40 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:03] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] test07SelectBoardAll()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:03] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[TRACE] [2021-06-12 15:03] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[DEBUG] [2021-06-12 15:03] <==      Total: 2
[DEBUG] [2021-06-12 15:03] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:03] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:03] test01InsertQNA()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] res id >> 1
[DEBUG] [2021-06-12 15:03] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:03] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:03] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:03:40.0, null
[DEBUG] [2021-06-12 15:03] <==      Total: 2
[DEBUG] [2021-06-12 15:03] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:03:40 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-12 15:03] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 15:03] <==    Updates: 0
[DEBUG] [2021-06-12 15:03] test05SelectQNAByBC()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:03] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:03] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:03:40.0, null
[DEBUG] [2021-06-12 15:03] <==      Total: 2
[DEBUG] [2021-06-12 15:03] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:03:40 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-12 15:03] test06SelectQNAAll()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:03] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:03] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:03] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:03:40.0, null
[DEBUG] [2021-06-12 15:03] <==      Total: 3
[DEBUG] [2021-06-12 15:03] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:03] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:03] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:03:40 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:03] testDataSource()
[DEBUG] [2021-06-12 15:03] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 15:03] LoginTimeout 30
[DEBUG] [2021-06-12 15:03] testSqlSession()
[DEBUG] [2021-06-12 15:03] session org.apache.ibatis.session.defaults.DefaultSqlSession@16a54126
[DEBUG] [2021-06-12 15:03] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: cnt
[TRACE] [2021-06-12 15:03] <==        Row: 4
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 15:03] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 15:03] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, 0
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] testInsertPrjOption()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:03] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 15:03] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 15:03] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 15:03] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 15:03] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 15:03] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[DEBUG] [2021-06-12 15:03] <==      Total: 5
[DEBUG] [2021-06-12 15:03] testSelectProjectListAll()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:03] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, test1, 김상건
[TRACE] [2021-06-12 15:03] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:03] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 15:03] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:03] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 14:51:07.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[DEBUG] [2021-06-12 15:03] <==      Total: 5
[DEBUG] [2021-06-12 15:03] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 15:03] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 15:03] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:03] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 15:03] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 15:03] ==> Parameters: test1(String)
[TRACE] [2021-06-12 15:03] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 15:03] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 15:03] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 15:03] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 15:03] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 15:03] ==> Parameters: 
[TRACE] [2021-06-12 15:03] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 15:03] <==        Row: 6
[DEBUG] [2021-06-12 15:03] <==      Total: 1
[DEBUG] [2021-06-12 15:03] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:03] ==> Parameters: 6(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:03] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:14] test03InsertAdmin()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 2
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 15:14] <==        Row: 4, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:14] <==      Total: 2
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] test07SelectAdminAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 15:14] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 15:14] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:14] <==      Total: 3
[DEBUG] [2021-06-12 15:14] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:14] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:14] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:14] test01SelectBCbyNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:14] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:14] test02InsertBC()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 15:14] <==      Total: 0
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] test06SelectBCAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:14] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 15:14] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 15:14] <==      Total: 2
[DEBUG] [2021-06-12 15:14] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:14] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 15:14] test01InsertQNA()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:14:08.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[DEBUG] [2021-06-12 15:14] <==      Total: 3
[DEBUG] [2021-06-12 15:14] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:14:08 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 0
[DEBUG] [2021-06-12 15:14] test05SelectQNAByBC()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:14] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:14:08.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[DEBUG] [2021-06-12 15:14] <==      Total: 3
[DEBUG] [2021-06-12 15:14] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:14:08 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 15:14] test06SelectQNAAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:14] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:14:08.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[DEBUG] [2021-06-12 15:14] <==      Total: 4
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:14:08 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:14] testDataSource()
[DEBUG] [2021-06-12 15:14] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 15:14] LoginTimeout 30
[DEBUG] [2021-06-12 15:14] testSqlSession()
[DEBUG] [2021-06-12 15:14] session org.apache.ibatis.session.defaults.DefaultSqlSession@6e694e60
[DEBUG] [2021-06-12 15:14] test01SelectBoardByNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] test03InsertBoard()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 0
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:08.0, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Board [boardNo=4, categoryNo=null, boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 15:14:08 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 0
[DEBUG] [2021-06-12 15:14] test07SelectBoardAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:08.0, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 3
[DEBUG] [2021-06-12 15:14] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:14] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 15:14:08 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: cnt
[TRACE] [2021-06-12 15:14] <==        Row: 4
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] testInsertPrjOption()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 15:14] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 15:14] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 15:14] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 15:14] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 15:14] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-12 15:14] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 6
[DEBUG] [2021-06-12 15:14] testSelectProjectListAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 14:51:07.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 15:03:40.0, 2021-06-12 15:03:40.0, 2021-06-12 15:03:40.0, 0, test2, 김경연
[DEBUG] [2021-06-12 15:14] <==      Total: 6
[DEBUG] [2021-06-12 15:14] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:14] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: test1(String)
[TRACE] [2021-06-12 15:14] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 15:14] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 15:14] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 15:14] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 15:14] <==        Row: 7
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 7(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:14] test03InsertAdmin()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 2
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 15:14] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:14] <==      Total: 2
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 0
[DEBUG] [2021-06-12 15:14] test07SelectAdminAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:14] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 15:14] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 15:14] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 15:14] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:14] <==      Total: 4
[DEBUG] [2021-06-12 15:14] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:14] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:14] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:14] Admin [adminNo=5, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:14] test01SelectBCbyNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:14] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:14] test02InsertBC()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 15:14] <==      Total: 0
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] test06SelectBCAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:14] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 15:14] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 15:14] <==      Total: 2
[DEBUG] [2021-06-12 15:14] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:14] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 15:14] test01SelectBoardByNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] test03InsertBoard()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 0
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:08.0, 0
[TRACE] [2021-06-12 15:14] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:43.0, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 2
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 0
[DEBUG] [2021-06-12 15:14] test07SelectBoardAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:08.0, 0
[TRACE] [2021-06-12 15:14] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:43.0, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 4
[DEBUG] [2021-06-12 15:14] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:14] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 15:14:08 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] Board [boardNo=5, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 15:14:43 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:14] test01InsertQNA()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] res id >> 1
[DEBUG] [2021-06-12 15:14] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:14:43.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[TRACE] [2021-06-12 15:14] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:43.0, null, null, null
[DEBUG] [2021-06-12 15:14] <==      Total: 4
[DEBUG] [2021-06-12 15:14] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:14:43 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:43 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 15:14] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 0
[DEBUG] [2021-06-12 15:14] test05SelectQNAByBC()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:14] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:14:43.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[TRACE] [2021-06-12 15:14] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:43.0, null, null, null
[DEBUG] [2021-06-12 15:14] <==      Total: 4
[DEBUG] [2021-06-12 15:14] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:14:43 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:43 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 15:14] test06SelectQNAAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:14] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:14:43.0, null
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[TRACE] [2021-06-12 15:14] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:43.0, null, null, null
[DEBUG] [2021-06-12 15:14] <==      Total: 5
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:14:43 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:14] QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:43 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:14] testDataSource()
[DEBUG] [2021-06-12 15:14] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 15:14] LoginTimeout 30
[DEBUG] [2021-06-12 15:14] testSqlSession()
[DEBUG] [2021-06-12 15:14] session org.apache.ibatis.session.defaults.DefaultSqlSession@38ac6fc1
[DEBUG] [2021-06-12 15:14] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: cnt
[TRACE] [2021-06-12 15:14] <==        Row: 4
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] testInsertPrjOption()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 15:14] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 15:14] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 15:14] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 15:14] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 15:14] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-12 15:14] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 15:14] <==        Row: 7, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-12 15:14] <==      Total: 7
[DEBUG] [2021-06-12 15:14] testSelectProjectListAll()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 15:14] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 14:51:07.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:14] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 15:03:40.0, 2021-06-12 15:03:40.0, 2021-06-12 15:03:40.0, 0, test2, 김경연
[TRACE] [2021-06-12 15:14] <==        Row: 7, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 15:14:08.0, 2021-06-12 15:14:08.0, 2021-06-12 15:14:08.0, 0, test2, 김경연
[DEBUG] [2021-06-12 15:14] <==      Total: 7
[DEBUG] [2021-06-12 15:14] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 15:14] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:14] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 15:14] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 15:14] ==> Parameters: test1(String)
[TRACE] [2021-06-12 15:14] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 15:14] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 15:14] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 15:14] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 15:14] ==> Parameters: 
[TRACE] [2021-06-12 15:14] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 15:14] <==        Row: 8
[DEBUG] [2021-06-12 15:14] <==      Total: 1
[DEBUG] [2021-06-12 15:14] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:14] ==> Parameters: 8(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:14] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:16] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 15:16] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:16] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:16] test03InsertAdmin()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:16] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] res id >> 1
[DEBUG] [2021-06-12 15:16] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 15:16] <==    Updates: 3
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 15:16] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:16] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 15:16] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 15:16] <==        Row: 6, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:16] <==      Total: 3
[DEBUG] [2021-06-12 15:16] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 15:16] <==    Updates: 0
[DEBUG] [2021-06-12 15:16] test07SelectAdminAll()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 15:16] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 15:16] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 15:16] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 15:16] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 15:16] <==        Row: 6, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 15:16] <==      Total: 5
[DEBUG] [2021-06-12 15:16] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 15:16] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 15:16] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:16] Admin [adminNo=5, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:16] Admin [adminNo=6, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 15:16] test01SelectBCbyNo()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:16] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:16] test02InsertBC()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:16] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] res id >> 1
[DEBUG] [2021-06-12 15:16] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 15:16] <==      Total: 0
[DEBUG] [2021-06-12 15:16] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] res id >> 1
[DEBUG] [2021-06-12 15:16] test06SelectBCAll()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 15:16] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 15:16] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 15:16] <==      Total: 2
[DEBUG] [2021-06-12 15:16] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 15:16] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 15:16] test01SelectBoardByNo()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:16] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:16] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:16] test03InsertBoard()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] res id >> 1
[DEBUG] [2021-06-12 15:16] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 15:16] <==    Updates: 0
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 15:16] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:16] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:08.0, 0
[TRACE] [2021-06-12 15:16] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:43.0, 0
[TRACE] [2021-06-12 15:16] <==        Row: 6, 1, 공지사항, <<BLOB>>, 2021-06-12 15:16:50.0, 0
[DEBUG] [2021-06-12 15:16] <==      Total: 3
[DEBUG] [2021-06-12 15:16] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 15:16] <==    Updates: 0
[DEBUG] [2021-06-12 15:16] test07SelectBoardAll()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 15:16] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 14:51:05.0, 1
[TRACE] [2021-06-12 15:16] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:05.0, 0
[TRACE] [2021-06-12 15:16] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:08.0, 0
[TRACE] [2021-06-12 15:16] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 15:14:43.0, 0
[TRACE] [2021-06-12 15:16] <==        Row: 6, 1, 공지사항, <<BLOB>>, 2021-06-12 15:16:50.0, 0
[DEBUG] [2021-06-12 15:16] <==      Total: 5
[DEBUG] [2021-06-12 15:16] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 15:16] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 14:51:05 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:16] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 15:14:08 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:16] Board [boardNo=5, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 15:14:43 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:16] Board [boardNo=6, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 15:16:50 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 15:16] test01InsertQNA()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] res id >> 1
[DEBUG] [2021-06-12 15:16] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] res id >> 1
[DEBUG] [2021-06-12 15:16] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:16] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:16] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:16:50.0, null
[TRACE] [2021-06-12 15:16] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:43.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:16:50.0, null, null, null
[DEBUG] [2021-06-12 15:16] <==      Total: 5
[DEBUG] [2021-06-12 15:16] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:16:50 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:43 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:16:50 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 15:16] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 15:16] <==    Updates: 0
[DEBUG] [2021-06-12 15:16] test05SelectQNAByBC()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:16] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:16:50.0, null
[TRACE] [2021-06-12 15:16] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:43.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:16:50.0, null, null, null
[DEBUG] [2021-06-12 15:16] <==      Total: 5
[DEBUG] [2021-06-12 15:16] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:16:50 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:43 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:16:50 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 15:16] test06SelectQNAAll()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 15:16] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 14:51:06.0, 넹, 2021-06-12 14:51:06.0, null
[TRACE] [2021-06-12 15:16] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 14:51:06.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:03:40.0, 잘 모르겠음, 2021-06-12 15:16:50.0, null
[TRACE] [2021-06-12 15:16] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:08.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:14:43.0, null, null, null
[TRACE] [2021-06-12 15:16] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 15:16:50.0, null, null, null
[DEBUG] [2021-06-12 15:16] <==      Total: 6
[DEBUG] [2021-06-12 15:16] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 14:51:06 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:16] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 14:51:06 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:16] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:03:40 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 15:16:50 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 15:16] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:08 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:16] QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:14:43 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:16] QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 15:16:50 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 15:16] testDataSource()
[DEBUG] [2021-06-12 15:16] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 15:16] LoginTimeout 30
[DEBUG] [2021-06-12 15:16] testSqlSession()
[DEBUG] [2021-06-12 15:16] session org.apache.ibatis.session.defaults.DefaultSqlSession@6596368e
[DEBUG] [2021-06-12 15:16] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: cnt
[TRACE] [2021-06-12 15:16] <==        Row: 4
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 15:16] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 15:16] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, 0
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] testInsertPrjOption()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:16] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 15:16] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 15:16] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 15:16] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 15:16] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 15:16] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-12 15:16] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 15:16] <==        Row: 7, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 15:16] <==        Row: 8, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-12 15:16] <==      Total: 8
[DEBUG] [2021-06-12 15:16] testSelectProjectListAll()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:16] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 1, test1, 김상건
[TRACE] [2021-06-12 15:16] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:16] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 15:16] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 14:51:07.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:16] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 14:51:07.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 15:16] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 15:03:40.0, 2021-06-12 15:03:40.0, 2021-06-12 15:03:40.0, 0, test2, 김경연
[TRACE] [2021-06-12 15:16] <==        Row: 7, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 15:14:08.0, 2021-06-12 15:14:08.0, 2021-06-12 15:14:08.0, 0, test2, 김경연
[TRACE] [2021-06-12 15:16] <==        Row: 8, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 15:14:43.0, 2021-06-12 15:14:43.0, 2021-06-12 15:14:43.0, 0, test2, 김경연
[DEBUG] [2021-06-12 15:16] <==      Total: 8
[DEBUG] [2021-06-12 15:16] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 15:16] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 15:16] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 15:16] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 14:51:07.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 15:16] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, 2021-06-12 14:51:07.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 15:16] ==> Parameters: test1(String)
[TRACE] [2021-06-12 15:16] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 15:16] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 15:16] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 15:16] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 15:16] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 15:16] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 15:16] ==> Parameters: 
[TRACE] [2021-06-12 15:16] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 15:16] <==        Row: 9
[DEBUG] [2021-06-12 15:16] <==      Total: 1
[DEBUG] [2021-06-12 15:16] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 15:16] ==> Parameters: 9(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 15:16] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:08] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 19:08] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:08] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:08] test03InsertAdmin()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:08] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 19:08] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:08] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:08] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 19:08] <==    Updates: 0
[DEBUG] [2021-06-12 19:08] test07SelectAdminAll()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:08] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 19:08] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 19:08] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:08] <==      Total: 3
[DEBUG] [2021-06-12 19:08] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:08] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:08] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:08] test01SelectBCbyNo()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:08] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:08] test02InsertBC()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:08] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 19:08] <==      Total: 0
[DEBUG] [2021-06-12 19:08] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] test06SelectBCAll()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:08] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 19:08] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 19:08] <==      Total: 2
[DEBUG] [2021-06-12 19:08] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:08] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 19:08] test01SelectBoardByNo()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:08] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:08] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:08] test03InsertBoard()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 19:08] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:08] <==        Row: 3, 1, 공지사항, <<BLOB>>, 2021-06-12 19:08:33.0, 0
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] Board [boardNo=3, categoryNo=null, boardTitle=공지사항, boardContent=06월 02일 UI 변경 안내, boardDate=Sat Jun 12 19:08:33 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:08] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] test07SelectBoardAll()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:08] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[TRACE] [2021-06-12 19:08] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[DEBUG] [2021-06-12 19:08] <==      Total: 2
[DEBUG] [2021-06-12 19:08] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:08] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:08] test01InsertQNA()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] res id >> 1
[DEBUG] [2021-06-12 19:08] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:08] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:08] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:08:33.0, null
[DEBUG] [2021-06-12 19:08] <==      Total: 2
[DEBUG] [2021-06-12 19:08] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:08:33 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-12 19:08] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 19:08] <==    Updates: 0
[DEBUG] [2021-06-12 19:08] test05SelectQNAByBC()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:08] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:08] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:08:33.0, null
[DEBUG] [2021-06-12 19:08] <==      Total: 2
[DEBUG] [2021-06-12 19:08] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:08:33 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-12 19:08] test06SelectQNAAll()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:08] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:08] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:08] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:08:33.0, null
[DEBUG] [2021-06-12 19:08] <==      Total: 3
[DEBUG] [2021-06-12 19:08] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:08] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:08] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:08:33 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:08] testDataSource()
[DEBUG] [2021-06-12 19:08] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 19:08] LoginTimeout 30
[DEBUG] [2021-06-12 19:08] testSqlSession()
[DEBUG] [2021-06-12 19:08] session org.apache.ibatis.session.defaults.DefaultSqlSession@38ac6fc1
[DEBUG] [2021-06-12 19:08] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: cnt
[TRACE] [2021-06-12 19:08] <==        Row: 4
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 19:08] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 19:08] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, 0
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] testInsertPrjOption()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:08] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 19:08] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 19:08] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 19:08] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 19:08] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 19:08] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[DEBUG] [2021-06-12 19:08] <==      Total: 5
[DEBUG] [2021-06-12 19:08] testSelectProjectListAll()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:08] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, test1, 김상건
[TRACE] [2021-06-12 19:08] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:08] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:08] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:08] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 19:07:34.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[DEBUG] [2021-06-12 19:08] <==      Total: 5
[DEBUG] [2021-06-12 19:08] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 19:08] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 19:08] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:08] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 19:08] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 19:08] ==> Parameters: test1(String)
[TRACE] [2021-06-12 19:08] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 19:08] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 19:08] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 19:08] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 19:08] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 19:08] ==> Parameters: 
[TRACE] [2021-06-12 19:08] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 19:08] <==        Row: 6
[DEBUG] [2021-06-12 19:08] <==      Total: 1
[DEBUG] [2021-06-12 19:08] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:08] ==> Parameters: 6(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:08] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:11] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 19:11] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:11] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:11] test03InsertAdmin()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:11] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] res id >> 1
[DEBUG] [2021-06-12 19:11] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 19:11] <==    Updates: 2
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 19:11] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:11] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:11] <==        Row: 4, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:11] <==      Total: 2
[DEBUG] [2021-06-12 19:11] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] res id >> 1
[DEBUG] [2021-06-12 19:11] test07SelectAdminAll()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:11] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 19:11] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 19:11] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:11] <==      Total: 3
[DEBUG] [2021-06-12 19:11] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:11] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:11] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:11] test01SelectBCbyNo()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:11] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:11] test02InsertBC()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:11] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] res id >> 1
[DEBUG] [2021-06-12 19:11] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 19:11] <==      Total: 0
[DEBUG] [2021-06-12 19:11] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] res id >> 1
[DEBUG] [2021-06-12 19:11] test06SelectBCAll()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:11] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 19:11] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 19:11] <==      Total: 2
[DEBUG] [2021-06-12 19:11] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:11] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 19:11] test01InsertQNA()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] res id >> 1
[DEBUG] [2021-06-12 19:11] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] res id >> 1
[DEBUG] [2021-06-12 19:11] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:11] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:11] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:11:19.0, null
[TRACE] [2021-06-12 19:11] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[DEBUG] [2021-06-12 19:11] <==      Total: 3
[DEBUG] [2021-06-12 19:11] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:11:19 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:11] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 19:11] <==    Updates: 0
[DEBUG] [2021-06-12 19:11] test05SelectQNAByBC()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:11] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:11] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:11:19.0, null
[TRACE] [2021-06-12 19:11] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[DEBUG] [2021-06-12 19:11] <==      Total: 3
[DEBUG] [2021-06-12 19:11] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:11:19 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:11] test06SelectQNAAll()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:11] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:11] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:11] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:11:19.0, null
[TRACE] [2021-06-12 19:11] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[DEBUG] [2021-06-12 19:11] <==      Total: 4
[DEBUG] [2021-06-12 19:11] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:11] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:11] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:11:19 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:11] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:11] testDataSource()
[DEBUG] [2021-06-12 19:11] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 19:11] LoginTimeout 30
[DEBUG] [2021-06-12 19:11] testSqlSession()
[DEBUG] [2021-06-12 19:11] session org.apache.ibatis.session.defaults.DefaultSqlSession@6e694e60
[DEBUG] [2021-06-12 19:11] test01SelectBoardByNo()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:11] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:11] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:11] test03InsertBoard()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] res id >> 1
[DEBUG] [2021-06-12 19:11] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 19:11] <==    Updates: 0
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 19:11] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:11] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] Board [boardNo=4, categoryNo=null, boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:11:20 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:11] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:11] <==    Updates: 0
[DEBUG] [2021-06-12 19:11] test07SelectBoardAll()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:11] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[TRACE] [2021-06-12 19:11] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[TRACE] [2021-06-12 19:11] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[DEBUG] [2021-06-12 19:11] <==      Total: 3
[DEBUG] [2021-06-12 19:11] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:11] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:11] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:11:20 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:11] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: cnt
[TRACE] [2021-06-12 19:11] <==        Row: 4
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 19:11] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 19:11] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, 0
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] testInsertPrjOption()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:11] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 19:11] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 19:11] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 19:11] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 19:11] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 19:11] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-12 19:11] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-12 19:11] <==      Total: 6
[DEBUG] [2021-06-12 19:11] testSelectProjectListAll()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:11] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, test1, 김상건
[TRACE] [2021-06-12 19:11] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:11] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:11] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:11] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 19:07:34.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:11] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:11] <==      Total: 6
[DEBUG] [2021-06-12 19:11] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 19:11] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 19:11] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:11] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 19:11] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 19:11] ==> Parameters: test1(String)
[TRACE] [2021-06-12 19:11] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 19:11] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 19:11] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 19:11] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 19:11] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:11] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 19:11] ==> Parameters: 
[TRACE] [2021-06-12 19:11] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 19:11] <==        Row: 7
[DEBUG] [2021-06-12 19:11] <==      Total: 1
[DEBUG] [2021-06-12 19:11] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:11] ==> Parameters: 7(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:11] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:50] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 19:50] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:50] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:50] test03InsertAdmin()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:50] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] res id >> 1
[DEBUG] [2021-06-12 19:50] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 19:50] <==    Updates: 2
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 19:50] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:50] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:50] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:50] <==      Total: 2
[DEBUG] [2021-06-12 19:50] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 19:50] <==    Updates: 0
[DEBUG] [2021-06-12 19:50] test07SelectAdminAll()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:50] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 19:50] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 19:50] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:50] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:50] <==      Total: 4
[DEBUG] [2021-06-12 19:50] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:50] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:50] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:50] Admin [adminNo=5, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:50] test01SelectBCbyNo()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:50] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:50] test02InsertBC()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:50] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] res id >> 1
[DEBUG] [2021-06-12 19:50] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 19:50] <==      Total: 0
[DEBUG] [2021-06-12 19:50] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] res id >> 1
[DEBUG] [2021-06-12 19:50] test06SelectBCAll()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:50] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 19:50] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 19:50] <==      Total: 2
[DEBUG] [2021-06-12 19:50] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:50] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 19:50] test01SelectBoardByNo()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:50] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:50] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:50] test03InsertBoard()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] res id >> 1
[DEBUG] [2021-06-12 19:50] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 19:50] <==    Updates: 0
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 19:50] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:50] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[TRACE] [2021-06-12 19:50] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 19:50:11.0, 0
[DEBUG] [2021-06-12 19:50] <==      Total: 2
[DEBUG] [2021-06-12 19:50] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:50] <==    Updates: 0
[DEBUG] [2021-06-12 19:50] test07SelectBoardAll()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:50] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[TRACE] [2021-06-12 19:50] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[TRACE] [2021-06-12 19:50] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[TRACE] [2021-06-12 19:50] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 19:50:11.0, 0
[DEBUG] [2021-06-12 19:50] <==      Total: 4
[DEBUG] [2021-06-12 19:50] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:50] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:50] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:11:20 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:50] Board [boardNo=5, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:50:11 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:50] test01InsertQNA()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] res id >> 1
[DEBUG] [2021-06-12 19:50] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] res id >> 1
[DEBUG] [2021-06-12 19:50] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:50] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:50] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:50:11.0, null
[TRACE] [2021-06-12 19:50] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:50] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[DEBUG] [2021-06-12 19:50] <==      Total: 4
[DEBUG] [2021-06-12 19:50] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:50:11 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:50] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 19:50] <==    Updates: 0
[DEBUG] [2021-06-12 19:50] test05SelectQNAByBC()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:50] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:50] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:50:11.0, null
[TRACE] [2021-06-12 19:50] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:50] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[DEBUG] [2021-06-12 19:50] <==      Total: 4
[DEBUG] [2021-06-12 19:50] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:50:11 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:50] test06SelectQNAAll()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:50] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:50] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:50] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:50:11.0, null
[TRACE] [2021-06-12 19:50] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:50] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[DEBUG] [2021-06-12 19:50] <==      Total: 5
[DEBUG] [2021-06-12 19:50] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:50] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:50] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:50:11 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:50] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:50] QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:50] testDataSource()
[DEBUG] [2021-06-12 19:50] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 19:50] LoginTimeout 30
[DEBUG] [2021-06-12 19:50] testSqlSession()
[DEBUG] [2021-06-12 19:50] session org.apache.ibatis.session.defaults.DefaultSqlSession@38ac6fc1
[DEBUG] [2021-06-12 19:50] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: cnt
[TRACE] [2021-06-12 19:50] <==        Row: 4
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 19:50] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 19:50] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, 0
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] testInsertPrjOption()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:50] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 19:50] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 19:50] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 19:50] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 19:50] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 19:50] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-12 19:50] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 19:50] <==        Row: 7, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-12 19:50] <==      Total: 7
[DEBUG] [2021-06-12 19:50] testSelectProjectListAll()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:50] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, test1, 김상건
[TRACE] [2021-06-12 19:50] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:50] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:50] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:50] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 19:07:34.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:50] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:50] <==        Row: 7, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:11:20.0, 2021-06-12 19:11:20.0, 2021-06-12 19:11:20.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:50] <==      Total: 7
[DEBUG] [2021-06-12 19:50] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 19:50] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 19:50] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:50] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 19:50] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 19:50] ==> Parameters: test1(String)
[TRACE] [2021-06-12 19:50] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 19:50] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 19:50] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 19:50] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 19:50] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:50] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 19:50] ==> Parameters: 
[TRACE] [2021-06-12 19:50] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 19:50] <==        Row: 8
[DEBUG] [2021-06-12 19:50] <==      Total: 1
[DEBUG] [2021-06-12 19:50] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:50] ==> Parameters: 8(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:50] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:53] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 19:53] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:53] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:53] test03InsertAdmin()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:53] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] res id >> 1
[DEBUG] [2021-06-12 19:53] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 19:53] <==    Updates: 3
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 19:53] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:53] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:53] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:53] <==        Row: 6, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:53] <==      Total: 3
[DEBUG] [2021-06-12 19:53] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 19:53] <==    Updates: 0
[DEBUG] [2021-06-12 19:53] test07SelectAdminAll()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:53] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 19:53] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 19:53] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:53] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:53] <==        Row: 6, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:53] <==      Total: 5
[DEBUG] [2021-06-12 19:53] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:53] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:53] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:53] Admin [adminNo=5, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:53] Admin [adminNo=6, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:53] test01SelectBCbyNo()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:53] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:53] test02InsertBC()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:53] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] res id >> 1
[DEBUG] [2021-06-12 19:53] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 19:53] <==      Total: 0
[DEBUG] [2021-06-12 19:53] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] res id >> 1
[DEBUG] [2021-06-12 19:53] test06SelectBCAll()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:53] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 19:53] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 19:53] <==      Total: 2
[DEBUG] [2021-06-12 19:53] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:53] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 19:53] test01SelectBoardByNo()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:53] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:53] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:53] test03InsertBoard()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] res id >> 1
[DEBUG] [2021-06-12 19:53] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 19:53] <==    Updates: 0
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 19:53] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:53] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[TRACE] [2021-06-12 19:53] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 19:50:11.0, 0
[TRACE] [2021-06-12 19:53] <==        Row: 6, 1, 공지사항, <<BLOB>>, 2021-06-12 19:53:31.0, 0
[DEBUG] [2021-06-12 19:53] <==      Total: 3
[DEBUG] [2021-06-12 19:53] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:53] <==    Updates: 0
[DEBUG] [2021-06-12 19:53] test07SelectBoardAll()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:53] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[TRACE] [2021-06-12 19:53] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[TRACE] [2021-06-12 19:53] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[TRACE] [2021-06-12 19:53] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 19:50:11.0, 0
[TRACE] [2021-06-12 19:53] <==        Row: 6, 1, 공지사항, <<BLOB>>, 2021-06-12 19:53:31.0, 0
[DEBUG] [2021-06-12 19:53] <==      Total: 5
[DEBUG] [2021-06-12 19:53] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:53] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:53] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:11:20 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:53] Board [boardNo=5, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:50:11 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:53] Board [boardNo=6, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:53:31 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:53] test01InsertQNA()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] res id >> 1
[DEBUG] [2021-06-12 19:53] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] res id >> 1
[DEBUG] [2021-06-12 19:53] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:53] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:53] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:53:31.0, null
[TRACE] [2021-06-12 19:53] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:53:31.0, null, null, null
[DEBUG] [2021-06-12 19:53] <==      Total: 5
[DEBUG] [2021-06-12 19:53] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:53:31 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:53:31 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:53] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 19:53] <==    Updates: 0
[DEBUG] [2021-06-12 19:53] test05SelectQNAByBC()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:53] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:53:31.0, null
[TRACE] [2021-06-12 19:53] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:53:31.0, null, null, null
[DEBUG] [2021-06-12 19:53] <==      Total: 5
[DEBUG] [2021-06-12 19:53] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:53:31 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:53:31 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:53] test06SelectQNAAll()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:53] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:53] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:53:31.0, null
[TRACE] [2021-06-12 19:53] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[TRACE] [2021-06-12 19:53] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:53:31.0, null, null, null
[DEBUG] [2021-06-12 19:53] <==      Total: 6
[DEBUG] [2021-06-12 19:53] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:53] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:53] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:53:31 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:53] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:53] QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:53] QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:53:31 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:53] testDataSource()
[DEBUG] [2021-06-12 19:53] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 19:53] LoginTimeout 30
[DEBUG] [2021-06-12 19:53] testSqlSession()
[DEBUG] [2021-06-12 19:53] session org.apache.ibatis.session.defaults.DefaultSqlSession@6596368e
[DEBUG] [2021-06-12 19:53] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: cnt
[TRACE] [2021-06-12 19:53] <==        Row: 4
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 19:53] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 19:53] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, 0
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] testInsertPrjOption()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:53] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 19:53] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 19:53] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 19:53] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 19:53] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 19:53] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-12 19:53] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 19:53] <==        Row: 7, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 19:53] <==        Row: 8, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-12 19:53] <==      Total: 8
[DEBUG] [2021-06-12 19:53] testSelectProjectListAll()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:53] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, test1, 김상건
[TRACE] [2021-06-12 19:53] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:53] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:53] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:53] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 19:07:34.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:53] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:53] <==        Row: 7, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:11:20.0, 2021-06-12 19:11:20.0, 2021-06-12 19:11:20.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:53] <==        Row: 8, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:50:11.0, 2021-06-12 19:50:11.0, 2021-06-12 19:50:11.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:53] <==      Total: 8
[DEBUG] [2021-06-12 19:53] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 19:53] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 19:53] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:53] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 19:53] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 19:53] ==> Parameters: test1(String)
[TRACE] [2021-06-12 19:53] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 19:53] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 19:53] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 19:53] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 19:53] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:53] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 19:53] ==> Parameters: 
[TRACE] [2021-06-12 19:53] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 19:53] <==        Row: 9
[DEBUG] [2021-06-12 19:53] <==      Total: 1
[DEBUG] [2021-06-12 19:53] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:53] ==> Parameters: 9(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:53] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:56] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 19:56] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:56] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:56] test03InsertAdmin()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:56] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] res id >> 1
[DEBUG] [2021-06-12 19:56] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 19:56] <==    Updates: 4
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 19:56] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:56] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:56] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:56] <==        Row: 6, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:56] <==        Row: 7, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:56] <==      Total: 4
[DEBUG] [2021-06-12 19:56] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 19:56] <==    Updates: 0
[DEBUG] [2021-06-12 19:56] test07SelectAdminAll()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 19:56] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 19:56] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 19:56] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:56] <==        Row: 5, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:56] <==        Row: 6, admin2, 1111, 유한솔, 010-1111-1122
[TRACE] [2021-06-12 19:56] <==        Row: 7, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 19:56] <==      Total: 6
[DEBUG] [2021-06-12 19:56] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 19:56] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 19:56] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:56] Admin [adminNo=5, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:56] Admin [adminNo=6, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:56] Admin [adminNo=7, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 19:56] test01SelectBCbyNo()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:56] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:56] test02InsertBC()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:56] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] res id >> 1
[DEBUG] [2021-06-12 19:56] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 19:56] <==      Total: 0
[DEBUG] [2021-06-12 19:56] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] res id >> 1
[DEBUG] [2021-06-12 19:56] test06SelectBCAll()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 19:56] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 19:56] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 19:56] <==      Total: 2
[DEBUG] [2021-06-12 19:56] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 19:56] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 19:56] test01SelectBoardByNo()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:56] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:56] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:56] test03InsertBoard()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] res id >> 1
[DEBUG] [2021-06-12 19:56] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 19:56] <==    Updates: 0
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 19:56] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:56] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[TRACE] [2021-06-12 19:56] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 19:50:11.0, 0
[TRACE] [2021-06-12 19:56] <==        Row: 6, 1, 공지사항, <<BLOB>>, 2021-06-12 19:53:31.0, 0
[TRACE] [2021-06-12 19:56] <==        Row: 7, 1, 공지사항, <<BLOB>>, 2021-06-12 19:56:40.0, 0
[DEBUG] [2021-06-12 19:56] <==      Total: 4
[DEBUG] [2021-06-12 19:56] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 19:56] <==    Updates: 0
[DEBUG] [2021-06-12 19:56] test07SelectBoardAll()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 19:56] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 19:07:32.0, 1
[TRACE] [2021-06-12 19:56] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:32.0, 0
[TRACE] [2021-06-12 19:56] <==        Row: 4, 1, 공지사항, <<BLOB>>, 2021-06-12 19:11:20.0, 0
[TRACE] [2021-06-12 19:56] <==        Row: 5, 1, 공지사항, <<BLOB>>, 2021-06-12 19:50:11.0, 0
[TRACE] [2021-06-12 19:56] <==        Row: 6, 1, 공지사항, <<BLOB>>, 2021-06-12 19:53:31.0, 0
[TRACE] [2021-06-12 19:56] <==        Row: 7, 1, 공지사항, <<BLOB>>, 2021-06-12 19:56:40.0, 0
[DEBUG] [2021-06-12 19:56] <==      Total: 6
[DEBUG] [2021-06-12 19:56] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 19:56] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 19:07:32 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:56] Board [boardNo=4, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:11:20 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:56] Board [boardNo=5, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:50:11 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:56] Board [boardNo=6, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:53:31 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:56] Board [boardNo=7, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=공지사항, boardContent=금일의 공지사항, boardDate=Sat Jun 12 19:56:40 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 19:56] test01InsertQNA()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] res id >> 1
[DEBUG] [2021-06-12 19:56] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] res id >> 1
[DEBUG] [2021-06-12 19:56] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:56] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:56] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:56:40.0, null
[TRACE] [2021-06-12 19:56] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:53:31.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 7, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:56:40.0, null, null, null
[DEBUG] [2021-06-12 19:56] <==      Total: 6
[DEBUG] [2021-06-12 19:56] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:56:40 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:53:31 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=7, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:56:40 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:56] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] res id >> 1
[DEBUG] [2021-06-12 19:56] test05SelectQNAByBC()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:56] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:56:40.0, null
[TRACE] [2021-06-12 19:56] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:53:31.0, null, null, null
[DEBUG] [2021-06-12 19:56] <==      Total: 5
[DEBUG] [2021-06-12 19:56] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:56:40 KST 2021, qnaFile=null], QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:53:31 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]]
[DEBUG] [2021-06-12 19:56] test06SelectQNAAll()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 19:56] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 19:07:33.0, 넹, 2021-06-12 19:07:33.0, null
[TRACE] [2021-06-12 19:56] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 19:07:33.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:08:33.0, 잘 모르겠음, 2021-06-12 19:56:40.0, null
[TRACE] [2021-06-12 19:56] <==        Row: 4, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:11:19.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 5, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:50:11.0, null, null, null
[TRACE] [2021-06-12 19:56] <==        Row: 6, 1, null, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 19:53:31.0, null, null, null
[DEBUG] [2021-06-12 19:56] <==      Total: 6
[DEBUG] [2021-06-12 19:56] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 19:07:33 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:56] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 19:07:33 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:56] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:08:33 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 19:56:40 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 19:56] QNA [qnaNo=4, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:11:19 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:56] QNA [qnaNo=5, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:50:11 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:56] QNA [qnaNo=6, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 19:53:31 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 19:56] testDataSource()
[DEBUG] [2021-06-12 19:56] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 19:56] LoginTimeout 30
[DEBUG] [2021-06-12 19:56] testSqlSession()
[DEBUG] [2021-06-12 19:56] session org.apache.ibatis.session.defaults.DefaultSqlSession@64152f
[DEBUG] [2021-06-12 19:56] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: cnt
[TRACE] [2021-06-12 19:56] <==        Row: 4
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 19:56] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 19:56] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, 0
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] testInsertPrjOption()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:56] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 19:56] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 19:56] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 19:56] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 19:56] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 19:56] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[TRACE] [2021-06-12 19:56] <==        Row: 6, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 19:56] <==        Row: 7, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 19:56] <==        Row: 8, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[TRACE] [2021-06-12 19:56] <==        Row: 9, 0, 트렌젝션성공!!!!!!!, 3000000, 김경연, 0
[DEBUG] [2021-06-12 19:56] <==      Total: 9
[DEBUG] [2021-06-12 19:56] testSelectProjectListAll()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:56] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 1, test1, 김상건
[TRACE] [2021-06-12 19:56] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:56] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:56] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 19:07:34.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:56] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 19:07:34.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 19:56] <==        Row: 6, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 2021-06-12 19:08:33.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:56] <==        Row: 7, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:11:20.0, 2021-06-12 19:11:20.0, 2021-06-12 19:11:20.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:56] <==        Row: 8, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:50:11.0, 2021-06-12 19:50:11.0, 2021-06-12 19:50:11.0, 0, test2, 김경연
[TRACE] [2021-06-12 19:56] <==        Row: 9, 2, 트렌젝션성공!!!!!!!, <<BLOB>>, 3000000, 2021-06-12 19:53:31.0, 2021-06-12 19:53:31.0, 2021-06-12 19:53:31.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:56] <==      Total: 9
[DEBUG] [2021-06-12 19:56] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 19:56] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 19:56] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 19:56] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 19:07:34.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 19:56] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, 2021-06-12 19:07:34.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 19:56] ==> Parameters: test1(String)
[TRACE] [2021-06-12 19:56] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 19:56] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 19:56] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 19:56] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 19:56] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 19:56] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 19:56] ==> Parameters: 
[TRACE] [2021-06-12 19:56] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 19:56] <==        Row: 10
[DEBUG] [2021-06-12 19:56] <==      Total: 1
[DEBUG] [2021-06-12 19:56] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 19:56] ==> Parameters: 10(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 19:56] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] test01SelectAdminbyNo()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 20:20] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminId = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: admin1(String)
[TRACE] [2021-06-12 20:20] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 20:20] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 20:20] test03InsertAdmin()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: insert into admin( AdminNo, AdminId, AdminPw, AdminName, AdminTel ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 20:20] ==> Parameters: 0(Integer), admin2(String), 0000(String), 유한솔(String), 010-1111-1111(String)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: update admin set AdminPw = ?, AdminName = ?, AdminTel = ? where AdminId = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1111(String), 유한솔(String), 010-1111-1122(String), admin2(String)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin where adminName = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 유한솔(String)
[TRACE] [2021-06-12 20:20] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 20:20] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 20:20] ==>  Preparing: delete from admin where adminNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 4(Integer)
[DEBUG] [2021-06-12 20:20] <==    Updates: 0
[DEBUG] [2021-06-12 20:20] test07SelectAdminAll()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select AdminNo, AdminId, AdminPw, AdminName, AdminTel from Admin
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: AdminNo, AdminId, AdminPw, AdminName, AdminTel
[TRACE] [2021-06-12 20:20] <==        Row: 1, admin, 0000, 김경연, 010-6510-7277
[TRACE] [2021-06-12 20:20] <==        Row: 2, admin1, 0000, 김상건, 010-3302-1972
[TRACE] [2021-06-12 20:20] <==        Row: 3, admin2, 1111, 유한솔, 010-1111-1122
[DEBUG] [2021-06-12 20:20] <==      Total: 3
[DEBUG] [2021-06-12 20:20] Admin [adminNo=1, adminId=admin, adminPw=0000, adminName=김경연, adminTel=010-6510-7277]
[DEBUG] [2021-06-12 20:20] Admin [adminNo=2, adminId=admin1, adminPw=0000, adminName=김상건, adminTel=010-3302-1972]
[DEBUG] [2021-06-12 20:20] Admin [adminNo=3, adminId=admin2, adminPw=1111, adminName=유한솔, adminTel=010-1111-1122]
[DEBUG] [2021-06-12 20:20] test01SelectBCbyNo()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 20:20] <==        Row: 1, 공지사항, board
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 20:20] test02InsertBC()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: insert into BoardCategory( categoryNo, categoryName, categoryClass ) values(?, ?, ?)
[DEBUG] [2021-06-12 20:20] ==> Parameters: 3(Integer), 업데이트(String), board(String)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: update BoardCategory set categoryName = ?, ? where categoryNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 종료된 이벤트(String), board(String), 3(Integer)
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory where categoryName = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 종료된 이벤트(String)
[DEBUG] [2021-06-12 20:20] <==      Total: 0
[DEBUG] [2021-06-12 20:20] ==>  Preparing: delete from BoardCategory where categoryNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] test06SelectBCAll()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select CategoryNo, CategoryName, categoryClass from BoardCategory
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: CategoryNo, CategoryName, categoryClass
[TRACE] [2021-06-12 20:20] <==        Row: 1, 공지사항, board
[TRACE] [2021-06-12 20:20] <==        Row: 2, 이벤트, board
[DEBUG] [2021-06-12 20:20] <==      Total: 2
[DEBUG] [2021-06-12 20:20] BoardCategory [categoryNo=1, categoryName=공지사항, categoryClass=board]
[DEBUG] [2021-06-12 20:20] BoardCategory [categoryNo=2, categoryName=이벤트, categoryClass=board]
[DEBUG] [2021-06-12 20:20] test01SelectBoardByNo()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 20:20] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 20:18:58.0, 1
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] Board [boardNo=1, categoryNo=null, boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 20:18:58 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where categoryNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 20:20] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 20:18:58.0, 0
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 20:18:58 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 20:20] test03InsertBoard()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: insert into Board(categoryNo, boardTitle, boardContent ) values(?, ?, ?)
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer), 공지사항(String), 금일의 공지사항(String)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: update Board set categoryNo = ?, boardTitle = ?, boardContent = ? where boardNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer), 공지사항(String), 06월 02일 UI 변경 안내(String), 3(Integer)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board where boardTitle = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 공지사항(String)
[TRACE] [2021-06-12 20:20] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 20:20] <==        Row: 3, 1, 공지사항, <<BLOB>>, 2021-06-12 20:20:02.0, 0
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] Board [boardNo=3, categoryNo=null, boardTitle=공지사항, boardContent=06월 02일 UI 변경 안내, boardDate=Sat Jun 12 20:20:02 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 20:20] ==>  Preparing: delete from Board where boardNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 3(Integer)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] test07SelectBoardAll()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount from Board
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: boardNo, categoryNo, boardTitle, boardContent, boardDate, boardReadCount
[TRACE] [2021-06-12 20:20] <==        Row: 1, 1, 아자아자 펀딩팀, <<BLOB>>, 2021-06-12 20:18:58.0, 1
[TRACE] [2021-06-12 20:20] <==        Row: 2, 2, 이벤트, <<BLOB>>, 2021-06-12 20:18:58.0, 0
[DEBUG] [2021-06-12 20:20] <==      Total: 2
[DEBUG] [2021-06-12 20:20] Board [boardNo=1, categoryNo=BoardCategory [categoryNo=1, categoryName=null, categoryClass=null], boardTitle=아자아자 펀딩팀, boardContent=힘을내요! 잘할거예요, boardDate=Sat Jun 12 20:18:58 KST 2021, boardReadCount=1]
[DEBUG] [2021-06-12 20:20] Board [boardNo=2, categoryNo=BoardCategory [categoryNo=2, categoryName=null, categoryClass=null], boardTitle=이벤트, boardContent=경험치2배이벤트, boardDate=Sat Jun 12 20:18:58 KST 2021, boardReadCount=0]
[DEBUG] [2021-06-12 20:20] testDataSource()
[DEBUG] [2021-06-12 20:20] DataSource HikariDataSource (HikariPool-1)
[DEBUG] [2021-06-12 20:20] LoginTimeout 30
[DEBUG] [2021-06-12 20:20] testSqlSession()
[DEBUG] [2021-06-12 20:20] session org.apache.ibatis.session.defaults.DefaultSqlSession@6e694e60
[DEBUG] [2021-06-12 20:20] testSelectCountByPrjNo()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select count(*) as cnt from fundinginfo f join prjoption o on o.optno= f.OptNo where f.prjno = ?;
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: cnt
[TRACE] [2021-06-12 20:20] <==        Row: 4
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] testselectFundingInfoByUserNo()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select f.prjNo,f.FundingNo ,p.PrjName ,o.optname, o.OptContent, o.optprice,p.StartDate , p.EndDate , p.PayDate , p.EndYN ,f.PayYN from fundinginfo f join project p on f.PrjNo = p.PrjNo join prjoption o on f.OptNo = o.OptNo where f.userno = ?;
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: prjNo, FundingNo, PrjName, optname, OptContent, optprice, StartDate, EndDate, PayDate, EndYN, PayYN
[TRACE] [2021-06-12 20:20] <==        Row: 1, 1, 클라우드펀딩, 문구세트A, 가방2개+연필1자루, 30000, 2021-06-12 20:18:59.0, 2021-06-12 20:18:59.0, 2021-06-12 20:18:59.0, 1, 0
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] testInsertPrjOption()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 20:20] ==> Parameters: 4(Integer), 프로젝트옵션(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] testSelectProjectJoinAll()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select p.prjno, if(sum(optPrice)>0,sum(optPrice),0) as totalPrice, p.Prjname, p.prjgoal, u.UserName ,count(fundingno) as totalCount from fundinginfo f join prjoption o on o.optno= f.OptNo right join project p on p.prjno = f.PrjNo join userinfo u on p.userno = u.userno group by p.prjNo;
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: prjno, totalPrice, Prjname, prjgoal, UserName, totalCount
[TRACE] [2021-06-12 20:20] <==        Row: 1, 860000, 클라우드펀딩, 1000000, 김상건, 4
[TRACE] [2021-06-12 20:20] <==        Row: 2, 300000, 홈페이지만들기, 5000000, 김상건, 1
[TRACE] [2021-06-12 20:20] <==        Row: 3, 0, 보드게임, 15000000, 김경연, 0
[TRACE] [2021-06-12 20:20] <==        Row: 4, 0, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, 10000000, 김상건, 0
[TRACE] [2021-06-12 20:20] <==        Row: 5, 100000, 성평등한 하루를 위한 양말, 7000000, 김상건, 1
[DEBUG] [2021-06-12 20:20] <==      Total: 5
[DEBUG] [2021-06-12 20:20] testSelectProjectListAll()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno= u.userno
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 20:20] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 1000000, 2021-06-12 20:18:59.0, 2021-06-12 20:18:59.0, 2021-06-12 20:18:59.0, 1, test1, 김상건
[TRACE] [2021-06-12 20:20] <==        Row: 2, 1, 홈페이지만들기, <<BLOB>>, 5000000, 2021-06-12 20:18:59.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 20:20] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 20:18:59.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[TRACE] [2021-06-12 20:20] <==        Row: 4, 1, UDT 훈련 수기, <내가 유디티가 된 이유> 출간, <<BLOB>>, 10000000, 2021-06-12 20:18:59.0, 2021-06-30 00:00:00.0, 2021-07-12 00:00:00.0, 0, test1, 김상건
[TRACE] [2021-06-12 20:20] <==        Row: 5, 1, 성평등한 하루를 위한 양말, <<BLOB>>, 7000000, 2021-06-12 20:18:59.0, 2021-06-10 00:00:00.0, 2021-07-22 00:00:00.0, 0, test1, 김상건
[DEBUG] [2021-06-12 20:20] <==      Total: 5
[DEBUG] [2021-06-12 20:20] testSelectProjjectListByNo()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select PrjNo,p.UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, u.UserId , u.UserName from project p join userinfo u on p.userno = u.UserNo where prjNo = ?;
[DEBUG] [2021-06-12 20:20] ==> Parameters: 3(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: PrjNo, UserNo, PrjName, PrjContent, PrjGoal, StartDate, EndDate, PayDate, EndYN, UserId, UserName
[TRACE] [2021-06-12 20:20] <==        Row: 3, 2, 보드게임, <<BLOB>>, 15000000, 2021-06-12 20:18:59.0, 2021-07-01 00:00:00.0, 2021-07-12 00:00:00.0, 0, test2, 김경연
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] testselectProjectSuccessImbak()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select p.prjno, p.userno, p.prjname, p.prjcontent, p.startdate, p.enddate,p.PayDate ,u.UserId , u.UserName , sum(optprice), p.PrjGoal,sum(optprice)/PrjGoal*100 from fundinginfo f join prjoption o on o.optno= f.OptNo join project p on o.prjno = p.PrjNo join userinfo u on u.userno = p.userno group by o.PrjNo having sum(optprice)/PrjGoal*100>80;
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: prjno, userno, prjname, prjcontent, startdate, enddate, PayDate, UserId, UserName, sum(optprice), PrjGoal, sum(optprice)/PrjGoal*100
[TRACE] [2021-06-12 20:20] <==        Row: 1, 1, 클라우드펀딩, <<BLOB>>, 2021-06-12 20:18:59.0, 2021-06-12 20:18:59.0, 2021-06-12 20:18:59.0, test1, 김상건, 960000, 1000000, 96.0000
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] test01InsertQNA()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: insert into QNA( userNo, categoryNo, qnaTitle, qnaContent, qnaFile ) values(?, ?, ?, ?, ?)
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer), 2(Integer), qna 작업 진행?(String), 잘 되어 감?(String), null
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: update QNA set qnaReply = ?, replyDate = now(), adminNo = ? where qnaNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 잘 모르겠음(String), 1(Integer), 3(Integer)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] res id >> 1
[DEBUG] [2021-06-12 20:20] test03SelectQNAByUserId()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where userNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 1(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 20:20] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 20:18:59.0, 넹, 2021-06-12 20:18:59.0, null
[TRACE] [2021-06-12 20:20] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 20:20:02.0, 잘 모르겠음, 2021-06-12 20:20:02.0, null
[DEBUG] [2021-06-12 20:20] <==      Total: 2
[DEBUG] [2021-06-12 20:20] [QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 20:18:59 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 20:18:59 KST 2021, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 20:20:02 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 20:20:02 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-12 20:20] ==>  Preparing: delete from QNA where qnaNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 7(Integer)
[DEBUG] [2021-06-12 20:20] <==    Updates: 0
[DEBUG] [2021-06-12 20:20] test05SelectQNAByBC()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA where categoryNo = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: 2(Integer)
[TRACE] [2021-06-12 20:20] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 20:20] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 20:18:59.0, null, null, null
[TRACE] [2021-06-12 20:20] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 20:20:02.0, 잘 모르겠음, 2021-06-12 20:20:02.0, null
[DEBUG] [2021-06-12 20:20] <==      Total: 2
[DEBUG] [2021-06-12 20:20] [QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 20:18:59 KST 2021, qnaReply=null, replyDate=null, qnaFile=null], QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 20:20:02 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 20:20:02 KST 2021, qnaFile=null]]
[DEBUG] [2021-06-12 20:20] test06SelectQNAAll()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile from QNA
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: qnaNo, userNo, adminNo, categoryNo, qnaTitle, qnaContent, qnaDate, qnaReply, replyDate, qnaFile
[TRACE] [2021-06-12 20:20] <==        Row: 1, 1, null, 1, 7월졸업, <<BLOB>>, 2021-06-12 20:18:59.0, 넹, 2021-06-12 20:18:59.0, null
[TRACE] [2021-06-12 20:20] <==        Row: 2, 2, null, 2, 이벤트, <<BLOB>>, 2021-06-12 20:18:59.0, null, null, null
[TRACE] [2021-06-12 20:20] <==        Row: 3, 1, 1, 2, qna 작업 진행?, <<BLOB>>, 2021-06-12 20:20:02.0, 잘 모르겠음, 2021-06-12 20:20:02.0, null
[DEBUG] [2021-06-12 20:20] <==      Total: 3
[DEBUG] [2021-06-12 20:20] QNA [qnaNo=1, userNo=null, adminNo=null, categoryNo=null, qnaTitle=7월졸업, qnaContent=1달만 더 힘내요!, qnaDate=Sat Jun 12 20:18:59 KST 2021, qnaReply=넹, replyDate=Sat Jun 12 20:18:59 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 20:20] QNA [qnaNo=2, userNo=null, adminNo=null, categoryNo=null, qnaTitle=이벤트, qnaContent=언제시작?, qnaDate=Sat Jun 12 20:18:59 KST 2021, qnaReply=null, replyDate=null, qnaFile=null]
[DEBUG] [2021-06-12 20:20] QNA [qnaNo=3, userNo=null, adminNo=null, categoryNo=null, qnaTitle=qna 작업 진행?, qnaContent=잘 되어 감?, qnaDate=Sat Jun 12 20:20:02 KST 2021, qnaReply=잘 모르겠음, replyDate=Sat Jun 12 20:20:02 KST 2021, qnaFile=null]
[DEBUG] [2021-06-12 20:20] ==>  Preparing: select UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount from userinfo where userId = ?
[DEBUG] [2021-06-12 20:20] ==> Parameters: test1(String)
[TRACE] [2021-06-12 20:20] <==    Columns: UserNo, UserId, UserPw, UserName, Nickname, UserPhone, ZipCode, Address, DetailAddress, Email, BankName, BankAccount
[TRACE] [2021-06-12 20:20] <==        Row: 1, test1, *97E7471D816A37E38510728AEA47440F9C6E2585, 김상건, ksg, 01033021972, 111222, 대구, 달서구, test@test.com, 국민, 1
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] UserInfo [userNo=1, userId=test1, userPw=*97E7471D816A37E38510728AEA47440F9C6E2585, userName=김상건, nickname=ksg, userPhone=01033021972, zipCode=111222, address=대구, detailAddress=달서구, email=test@test.com, bankName=국민, bankAccount=1, secession=false]
[DEBUG] [2021-06-12 20:20] testTrJoinPrjAndPrjOpt_Success()
[DEBUG] [2021-06-12 20:20] ==>  Preparing: insert into project( UserNo, PrjName, PrjContent, PrjGoal, EndDate, PayDate) values( ?, ?, ?, ?, now(), now())
[DEBUG] [2021-06-12 20:20] ==> Parameters: 2(Integer), 트렌젝션성공!!!!!!!(String), 제발,,,,(String), 3000000(Integer)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: SELECT last_insert_id()
[DEBUG] [2021-06-12 20:20] ==> Parameters: 
[TRACE] [2021-06-12 20:20] <==    Columns: last_insert_id()
[TRACE] [2021-06-12 20:20] <==        Row: 6
[DEBUG] [2021-06-12 20:20] <==      Total: 1
[DEBUG] [2021-06-12 20:20] ==>  Preparing: insert into prjoption (prjno, OptName, OptPrice, OptContent) values (?, ?, ?, ?)
[DEBUG] [2021-06-12 20:20] ==> Parameters: 6(Integer), 분식!!!!!!2(String), 4000000(Integer), 옵션d(String)
[DEBUG] [2021-06-12 20:20] <==    Updates: 1
